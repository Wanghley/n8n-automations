{
  "active": false,
  "connections": {
    "Get Image": {
      "main": [
        [
          {
            "node": "Post With Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post With Image": {
      "main": [
        [
          {
            "node": "Update Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get Data from Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Formatting 1": {
      "main": [
        [
          {
            "node": "Send Content Confirmation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Image Provided": {
      "main": [
        [
          {
            "node": "Get Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Post Without Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Without Image": {
      "main": [
        [
          {
            "node": "Update Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Data from Sheets": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Post Content": {
      "main": [
        [
          {
            "node": "Data Formatting 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Regenerate Post Content": {
      "main": [
        [
          {
            "node": "Data Formatting 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Content Confirmation": {
      "main": [
        [
          {
            "node": "Content Confirmation Logic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Confirmation Logic": {
      "main": [
        [
          {
            "node": "If Image Provided",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Regenerate Post Content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cohere Model": {
      "ai_languageModel": [
        []
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "New keywords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CONFIG": {
      "main": [
        [
          {
            "node": "Get saved keywords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapping": {
      "main": [
        [
          {
            "node": "If we have scraped min 1 url -> Save",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "content1": {
      "main": [
        [
          {
            "node": "content2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "content2": {
      "main": [
        [
          {
            "node": "content3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "content3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GoogleTrends": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New keywords": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Mapping",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "content1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get saved keywords": {
      "main": [
        [
          {
            "node": "GoogleTrends",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start every hour past 11 minutes": {
      "main": [
        []
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "CONFIG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If we have scraped min 1 url -> Save": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "All scraping node failed. Don't save record without summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Generate Post Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Post Content",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Regenerate Post Content",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-21T22:13:20.165Z",
  "id": "Fxo1noc5NtQ6k7bM",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI-Generated LinkedIn Posts",
  "nodes": [
    {
      "parameters": {
        "url": "={{ $('Get Data from Sheets').item.json.Image }}",
        "options": {}
      },
      "id": "12466aed-380c-4067-9007-db0c26b8f9af",
      "name": "Get Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        220,
        0
      ],
      "typeVersion": 4.2,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "c9126e61-7f01-4fe3-8ff7-adf0f1a3d87f",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -1860,
        480
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1JUpfF8J_619vGSIBjoMTjVrPaYTzVFpwk6X3lSxvH_4/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "N8n automation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JUpfF8J_619vGSIBjoMTjVrPaYTzVFpwk6X3lSxvH_4/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "=Status",
              "lookupValue": "Pending"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "id": "85290314-8c68-4219-bf42-be3045ac6d2f",
      "name": "Get Data from Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -1640,
        480
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dn6QJHcIoD5uZ1vg",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# LinkedIn Post Generation\n\n## Post Description:\n{{ $json[\"Post Description\"] }}\n\n## Instructions:\n{{ $json[\"Instructions\"] }}\n\n---\n\n**Task:**\nUsing the information above, generate the content for a LinkedIn post:\n- Use the Description and Instructions to create a new post.\n- Ensure your output is positive, professional, clear, and follows all provided instructions and feedback.\n- Do not include any explanations, just the final post content only, ready to publish on LinkedIn.\n- Limit to 1300 characters.\n- If the user demands to keep the same post as the Post Descrioption (in the instructions), then keep the same post content as provided in the Post Description, and output it.",
        "messages": {
          "messageValues": [
            {
              "message": "=You are an expert social media and LinkedIn content writer.\n\nYou will be provided with:\n- A brief post description\n- Specific instructions from the user\n\nPlease follow these steps:\n\n1. Initial Creation:\nIf you are given a post description and instructions, write a polished, professionally worded LinkedIn post suitable for sharing. Strictly follow the instructions and ensure the message is engaging and succinct.\nIf instructed, add a call to action or particular phrase (for example, \"Connect with me\" at the bottom).\n\n2. Formatting:\nKeep the tone positive, inclusive, and professional.\nAdd relevant hashtags in small case.\nLimit the content to within 1300 characters.\nPlace the call to action or special instruction at the end if requested.\nOutput ONLY the final LinkedIn post content. Do NOT include any explanations, markdown, headings, or commentary—just the post text, ready to copy and share on LinkedIn."
            }
          ]
        }
      },
      "id": "cc7ccc01-65e7-466c-8e35-5bb2aa504ee2",
      "name": "Generate Post Content",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        -1200,
        480
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bded6f56-99e2-4f1a-be41-27a8dd417844",
              "name": "Post Content",
              "type": "string",
              "value": "={{ $json.text }}"
            },
            {
              "id": "c222c42e-b639-4a74-a1b0-7a3e6e141d55",
              "name": "Post Description",
              "type": "string",
              "value": "={{ $('Get Data from Sheets').item.json['Post Description'] }}"
            },
            {
              "id": "14775ff7-e005-4a86-9623-c322365f7d3a",
              "name": "Instructions",
              "type": "string",
              "value": "={{ $('Get Data from Sheets').item.json.Instructions }}"
            }
          ]
        },
        "options": {}
      },
      "id": "11d46b07-862c-4f05-b427-0da6c533e24d",
      "name": "Data Formatting 1",
      "type": "n8n-nodes-base.set",
      "position": [
        -820,
        480
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "wanghleys@gmail.com",
        "subject": "Approval for LinkedIn Post",
        "message": "=Generated Post:\n{{ $json['Post Content'] }}\n\n----------\n\nPost Description:\n{{ $json['Post Description'] }}\n\n----------\n\nInstructions:\n{{ $json.Instructions }}",
        "responseType": "customForm",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Confirm  Content?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Yes"
                  },
                  {
                    "option": "No"
                  },
                  {
                    "option": "Cancel"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Any Changes?",
              "fieldType": "textarea"
            }
          ]
        },
        "options": {}
      },
      "id": "2700f1a3-73f8-4583-ad8f-ee6831edae01",
      "name": "Send Content Confirmation",
      "type": "n8n-nodes-base.gmail",
      "position": [
        -600,
        380
      ],
      "webhookId": "29614d41-05c1-44af-93a6-4831a27f9331",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "iI0Wf8oDEtjIdnel",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "99ec185e-80ac-451d-bb69-662f84a7cf52",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data['Confirm  Content?'] }}",
                    "rightValue": "Yes"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Yes"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "77031007-a912-4b9b-9cca-846c57ffaec8",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data['Confirm  Content?'] }}",
                    "rightValue": "No"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "No"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "e94de530-6451-48aa-892c-924a9c41cfb0",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data['Confirm  Content?'] }}",
                    "rightValue": "Cancel"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Cancel"
            }
          ]
        },
        "options": {}
      },
      "id": "e64c78cd-250f-4361-82e3-e9f0648cd40e",
      "name": "Content Confirmation Logic",
      "type": "n8n-nodes-base.switch",
      "position": [
        -380,
        380
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Apply the modification requests on the following LinkedIn post. Besides applying the reqested modifications, return the same linkedin post.\n\nLinkedIn post:\n```\n{{ $('Data Formatting 1').item.json['Post Content'] }}\n```\n\nChange requests:\n{{ $('Send Content Confirmation').item.json.data['Any Changes?'] }}\n\n**Task:**\nUsing the information above, update the LinkedIn post content:\n- Do not include any explanations, just the final post content only (with all the change requests included in the post), ready to publish on LinkedIn.\n- Limit to 1300 characters.\n- If the user demands to keep the same post as the Post Description (in the instructions), then keep the same post content as provided in the Post Description, and output it."
      },
      "id": "ea6b2713-ebea-494d-adf7-3bc41ed42a36",
      "name": "Regenerate Post Content",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        -160,
        560
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "9a78220d-35f5-48b6-9ce3-faecaac24b74",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $('Get Data from Sheets').item.json.Image }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "fab7327e-c028-4d73-b2f4-7b3cff9b89f5",
      "name": "If Image Provided",
      "type": "n8n-nodes-base.if",
      "position": [
        -80,
        100
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "person": "7ZIi3jyY9C",
        "text": "={{ $('Data Formatting 1').item.json['Post Content'] }}",
        "shareMediaCategory": "IMAGE",
        "additionalFields": {}
      },
      "id": "42f0eb55-0b06-4c46-93d2-fa386d21ac3e",
      "name": "Post With Image",
      "type": "n8n-nodes-base.linkedIn",
      "position": [
        440,
        0
      ],
      "typeVersion": 1,
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "vOxjN4i9Qe4F15ha",
          "name": "LinkedIn account"
        }
      }
    },
    {
      "parameters": {
        "person": "7ZIi3jyY9C",
        "text": "={{ $('Data Formatting 1').item.json['Post Content'] }}",
        "additionalFields": {}
      },
      "id": "20eed603-f056-497e-be6b-96c665250096",
      "name": "Post Without Image",
      "type": "n8n-nodes-base.linkedIn",
      "position": [
        440,
        200
      ],
      "typeVersion": 1,
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "vOxjN4i9Qe4F15ha",
          "name": "LinkedIn account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1JUpfF8J_619vGSIBjoMTjVrPaYTzVFpwk6X3lSxvH_4/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "N8n automation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JUpfF8J_619vGSIBjoMTjVrPaYTzVFpwk6X3lSxvH_4/edit#gid=0"
        },
        "columns": {
          "value": {
            "Output": "={{ $json.urn }}",
            "Status": "=Completed",
            "Post Link": "={{ $json.urn }}",
            "row_number": "={{ $('Get Data from Sheets').item.json.row_number }}"
          },
          "schema": [
            {
              "id": "Post Description",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Post Description",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Instructions",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Instructions",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Image",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Image",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Output",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Output",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Post Link",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Post Link",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": true,
              "required": false,
              "displayName": "row_number",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "row_number"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "c25f2b56-b841-4697-9719-489ca66dc8b2",
      "name": "Update Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        660,
        200
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dn6QJHcIoD5uZ1vg",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "## 1. Schedule & Sheet Data Retrieval\n\nThis workflow starts automatically on a defined schedule (e.g., daily or hourly).\n\nIt retrieves the next Google Sheet row marked as ‘Pending’.\n\nThe sheet should include columns like:\n1. Post Description\n2. Instructions\n3. Image\n4. Status\n5. row_number (required for updates)\n\nEnsure your Google Sheets credentials are correctly configured.",
        "height": 380,
        "width": 420
      },
      "id": "6e52652b-25e2-48d4-8ffa-0952698ae464",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2380,
        360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 2. AI-Powered Post Generation & Formatting\n\nUses OpenAI GPT to generate a LinkedIn post based on the sheet’s Post Description and Instructions.\n\nYou can modify the prompt if needed.\nThe generated post is then formatted along with relevant data for easy reference and consistency.",
        "height": 240,
        "width": 420
      },
      "id": "9ba23d66-8eb4-40f5-b640-13fcdaf9e87a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1820,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 3. Gmail Approval Workflow\n\nSends the formatted post to an approver via Gmail.\n\nThe approver can respond with:\n✅ Yes – Approve\n✏️ No – Request changes\n❌ Cancel – Abort the post\n\nSet Gmail credentials and recipient email in the node.",
        "height": 240,
        "width": 440
      },
      "id": "68321fb5-20c5-4510-a65e-a354cf2dcf22",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1160,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 4. Approval Handling & Regeneration\n\nHandles all approval responses:\n- If Yes, proceed to post.\n- If No, regenerate content based on the feedback and resend.\n- If Cancel, update the Google Sheet as Cancelled.\n\nThis ensures a complete review cycle before posting.",
        "height": 240,
        "width": 440
      },
      "id": "49272609-fce4-4f9d-8c0f-09c1220db27f",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -480,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 5. Image Check, Posting & Sheet Update\n\nChecks if an image URL is provided.\n- If present: Downloads the image and posts with it.\n- If not: Posts content without an image.\n\nAfter posting, it updates the Google Sheet with:\n- Status = Completed or Cancelled\n- LinkedIn post link/output\n\nUses row_number for precise sheet updates.",
        "height": 320,
        "width": 460
      },
      "id": "90de2b91-a606-43aa-883e-df23811ea0fe",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        220,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "model": ""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmCohere",
      "typeVersion": 1,
      "position": [
        -1220,
        800
      ],
      "id": "b4893d01-33ad-4fda-8412-4c569f3a20e0",
      "name": "Cohere Model",
      "credentials": {
        "cohereApi": {
          "id": "UAXHmWoh6hWH8PAp",
          "name": "CohereApi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -800,
        680
      ],
      "typeVersion": 1,
      "id": "d366d606-ce72-4818-8df3-fe4956759c37",
      "name": "Sticky Note5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -800,
        680
      ],
      "typeVersion": 1,
      "id": "1fa44738-5967-45b8-a9a8-5fbbc6094690",
      "name": "Sticky Note6"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -800,
        680
      ],
      "typeVersion": 1,
      "id": "5287c777-b72e-4ae5-b64b-dca0e7261996",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "height": 1500,
        "width": 3320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2460,
        -100
      ],
      "id": "fca89d8d-6791-41b6-9331-a29fb81c9016",
      "name": "Sticky Note8"
    },
    {
      "parameters": {},
      "id": "3e39a375-717e-4431-ac33-a1e5fcd220de",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -2340,
        1680
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "explicitArray": false,
          "normalize": false
        }
      },
      "id": "24039a7c-4663-460e-9a43-0b3bba5094b2",
      "name": "XML",
      "type": "n8n-nodes-base.xml",
      "position": [
        -1340,
        1800
      ],
      "executeOnce": true,
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://trends.google.com/trending/rss",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "geo",
              "value": "US"
            },
            {
              "name": "category",
              "value": "18"
            }
          ]
        },
        "options": {}
      },
      "id": "726dbbba-db2d-4212-b196-5765ec99f84d",
      "name": "GoogleTrends",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1600,
        1800
      ],
      "executeOnce": true,
      "retryOnFail": true,
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "25d7e553-9678-40ad-bb69-e4eb4bce4d11",
              "name": "min_traffic",
              "type": "number",
              "value": 500
            },
            {
              "id": "decd0a3d-ddc5-45c3-a56f-ee1f14705019",
              "name": "max_results",
              "type": "number",
              "value": 3
            },
            {
              "id": "12cdd78a-45a7-499e-8fe5-0ab6a7da8a10",
              "name": "jina_key",
              "type": "string",
              "value": "jina_d36ecf01b3df4a109caa0ba32c8d074fdX8LDTb-wj924x_BtHyM0x4JlP0_"
            }
          ]
        },
        "options": {}
      },
      "id": "68438e4c-ec73-46b0-809e-f3eca8c43822",
      "name": "CONFIG",
      "type": "n8n-nodes-base.set",
      "position": [
        -2120,
        1800
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1JUpfF8J_619vGSIBjoMTjVrPaYTzVFpwk6X3lSxvH_4/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 2036654916,
          "mode": "list",
          "cachedResultName": "Keywords",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JUpfF8J_619vGSIBjoMTjVrPaYTzVFpwk6X3lSxvH_4/edit#gid=2036654916"
        },
        "options": {}
      },
      "id": "a529796d-14b2-40e7-b390-ca3a4858621e",
      "name": "Get saved keywords",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -1860,
        1800
      ],
      "executeOnce": true,
      "typeVersion": 4.5,
      "alwaysOutputData": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dn6QJHcIoD5uZ1vg",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "12122c90-c389-4b6a-8fc0-003855159bf2",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -2140,
        2300
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7230decf-45d9-4006-b005-614fb1dede10",
              "name": "summary",
              "type": "string",
              "value": "={{ $('content1').item.json.data.text.replaceAll('\\n', ' ').trim() }}\n---\n{{ $('content2').item.json.data.text.replaceAll('\\n', ' ').trim() }}\n---\n{{ $('content3').item.json.data.text.replaceAll('\\n', ' ').trim() }}"
            },
            {
              "id": "ad8f7dcd-fc93-41f3-b643-db4a2b569119",
              "name": "trending_keyword",
              "type": "string",
              "value": "={{ $('New keywords').item.json.trending_keyword }}"
            },
            {
              "id": "a3838385-90e2-4308-b147-5ef6de4a2c19",
              "name": "approx_traffic",
              "type": "number",
              "value": "={{ $('New keywords').item.json.approx_traffic }}"
            },
            {
              "id": "fc8523d5-a68d-443b-ad49-9057dee85617",
              "name": "pubDate",
              "type": "string",
              "value": "={{ $('New keywords').item.json.pubDate }}"
            },
            {
              "id": "139fd57f-8ccc-453b-9f8f-94c9546bbd1c",
              "name": "status",
              "type": "string",
              "value": "idea"
            },
            {
              "id": "39fa6799-78db-453e-ad29-359ab441e912",
              "name": "news_item_url1",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_url1 }}"
            },
            {
              "id": "1e6e7545-526a-4003-ac92-520fa04cfe1d",
              "name": "news_item_title1",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_title1 }}"
            },
            {
              "id": "12c019fc-2fe6-41e8-a8b8-e38bdfa16215",
              "name": "news_item_title2",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_title2 }}"
            },
            {
              "id": "b14b5835-66b7-448c-b9a5-d9f85d9f7f12",
              "name": "news_item_url2",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_url2 }}"
            },
            {
              "id": "4df8d3e0-7c8d-40e1-8ed7-b1743a8bbf17",
              "name": "news_item_title3",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_title3 }}"
            },
            {
              "id": "7fe45e6d-1978-49b4-b289-c33e3d68f71a",
              "name": "news_item_url3",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_url3 }}"
            },
            {
              "id": "ef39509c-c4e7-49b1-9ee8-ad82a8af9514",
              "name": "news_item_picture1",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_picture1 }}"
            },
            {
              "id": "a2210ea6-8ee5-408a-9ba1-5e07bd4d7f1b",
              "name": "news_item_source1",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_source1 }}"
            },
            {
              "id": "b6136672-4c09-4da0-ba5b-d9026877ca1e",
              "name": "news_item_picture2",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_picture2 }}"
            },
            {
              "id": "f9a54dca-079c-4431-af34-6bb98a6d8711",
              "name": "news_item_source2",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_source2 }}"
            },
            {
              "id": "aa38fecd-3743-447f-aa54-a1a86b5ad717",
              "name": "news_item_picture3",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_picture3 }}"
            },
            {
              "id": "2ff53574-9f9d-4e35-afbe-161e77a58515",
              "name": "news_item_source3",
              "type": "string",
              "value": "={{ $('New keywords').item.json.news_item_source3 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5900777d-fb55-4f35-9fa9-c6f4bc8e58fe",
      "name": "Mapping",
      "type": "n8n-nodes-base.set",
      "position": [
        -1880,
        2300
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1JUpfF8J_619vGSIBjoMTjVrPaYTzVFpwk6X3lSxvH_4/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 299161619,
          "mode": "list",
          "cachedResultName": "Ideas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JUpfF8J_619vGSIBjoMTjVrPaYTzVFpwk6X3lSxvH_4/edit#gid=299161619"
        },
        "columns": {
          "value": {
            "status": "idea",
            "pubDate": "={{ $json.pubDate }}",
            "abstract": "={{ $json.abstract.replaceAll('  ', '').substring(0, 49999) }}",
            "approx_traffic": "={{ $json.approx_traffic }}",
            "news_item_url1": "={{ $json.news_item_url1 }}",
            "news_item_url2": "={{ $json.news_item_url2 }}",
            "news_item_url3": "={{ $json.news_item_url3 }}",
            "news_item_title1": "={{ $json.news_item_title1 }}",
            "news_item_title2": "={{ $json.news_item_title2 }}",
            "news_item_title3": "={{ $json.news_item_title3 }}",
            "trending_keyword": "={{ $json.trending_keyword }}",
            "news_item_source1": "={{ $json.news_item_source1 }}",
            "news_item_source2": "={{ $json.news_item_source2 }}",
            "news_item_source3": "={{ $json.news_item_source3 }}",
            "news_item_picture1": "={{ $json.news_item_picture1 }}",
            "news_item_picture2": "={{ $json.news_item_picture2 }}",
            "news_item_picture3": "={{ $json.news_item_picture3 }}"
          },
          "schema": [
            {
              "id": "status",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "trending_keyword",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "trending_keyword",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "approx_traffic",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "approx_traffic",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "abstract",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "abstract",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "pubDate",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "pubDate",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_url1",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_url1",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_title1",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_title1",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_picture1",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_picture1",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_source1",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_source1",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_url2",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_url2",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_title2",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_title2",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_picture2",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_picture2",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_source2",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_source2",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_url3",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_url3",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_title3",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_title3",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_picture3",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_picture3",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "news_item_source3",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "news_item_source3",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "c22e226f-3f32-4b50-8cc2-d9c6512d9de7",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -1300,
        2100
      ],
      "typeVersion": 4.5,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dn6QJHcIoD5uZ1vg",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const max_results = $('CONFIG').first().json.max_results;\nconst min_traffic = $('CONFIG').first().json.min_traffic;\n\nconst gsheet = $(\"Get saved keywords\").all();\nconst gsheetKeys = gsheet.map(record => record.json.trending_keyword);\n\nconst items = $('XML').first().json.rss.channel.item;\nconst trafficKey = Object.keys(items[0]).find(key => key.includes(\"approx_traffic\"));\nconst parseTraffic = (traffic) => parseInt(traffic.replace('+', ''), 10);\n\nconst newItems = items.map(item => {\n    const links = Array.isArray(item[\"ht:news_item\"]) ? item[\"ht:news_item\"].slice(0, 3) : [];\n\n    const flattenedLinks = links.reduce((acc, news, index) => {\n        acc[`news_item_url${index + 1}`] = news[\"ht:news_item_url\"];\n        acc[`news_item_title${index + 1}`] = news[\"ht:news_item_title\"];\n        acc[`news_item_picture${index + 1}`] = news[\"ht:news_item_picture\"];\n        acc[`news_item_source${index + 1}`] = news[\"ht:news_item_source\"];\n        return acc;\n    }, {});\n\n    return {\n        trending_keyword: item.title,\n        approx_traffic: parseTraffic(item[trafficKey]),\n        pubDate: item.pubDate,\n        ...flattenedLinks, // Aggiungi i link\n    };\n}).filter(item => \n    item.approx_traffic >= min_traffic && \n    !gsheetKeys.includes(item.trending_keyword) // Filtra quelli già presenti in Google Sheets\n);\n\nlet sortedItems = newItems.sort((a, b) => b.approx_traffic - a.approx_traffic);\nif (max_results > 0) {\n    sortedItems = sortedItems.slice(0, max_results);\n}\n\nreturn sortedItems;\n"
      },
      "id": "698425da-9134-478b-a99e-c23d4c6bcdb6",
      "name": "New keywords",
      "type": "n8n-nodes-base.code",
      "position": [
        -1100,
        1800
      ],
      "typeVersion": 2,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "url": "=https://r.jina.ai/{{ $('New keywords').item.json.news_item_url1 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('CONFIG').item.json.jina_key }}"
            },
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "X-Remove-Selector",
              "value": "a, link, script, footer, img, svg"
            },
            {
              "name": "X-Retain-Images",
              "value": "none"
            },
            {
              "name": "X-Return-Format",
              "value": "text"
            }
          ]
        },
        "options": {}
      },
      "id": "e0c72410-8768-42ec-ae12-2c191449894c",
      "name": "content1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1860,
        2620
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "=https://r.jina.ai/{{ $('New keywords').item.json.news_item_url2 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('CONFIG').item.json.jina_key }}"
            },
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "X-Remove-Selector",
              "value": "a, link, script, footer, img, svg"
            },
            {
              "name": "X-Retain-Images",
              "value": "none"
            },
            {
              "name": "X-Return-Format",
              "value": "text"
            }
          ]
        },
        "options": {}
      },
      "id": "528af99a-12c2-4117-bab5-f77b5f786dd5",
      "name": "content2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1600,
        2620
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "=https://r.jina.ai/{{ $('New keywords').item.json.news_item_url3 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('CONFIG').item.json.jina_key }}"
            },
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "X-Remove-Selector",
              "value": "a, link, script, footer, img, svg"
            },
            {
              "name": "X-Retain-Images",
              "value": "none"
            },
            {
              "name": "X-Return-Format",
              "value": "text"
            }
          ]
        },
        "options": {}
      },
      "id": "0bdf2a7b-6f0e-43f1-9b9f-10a09c266832",
      "name": "content3",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1320,
        2620
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "11 */1 * * *"
            }
          ]
        }
      },
      "id": "bf05cda4-3647-46e1-80e2-a5dd0061a249",
      "name": "Start every hour past 11 minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -2380,
        1800
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "42b15ebc-f2f7-4dc0-957f-b04d1bdacb41",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.summary.length > 100 }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "635c764a-71e4-4262-a517-e9e37469164b",
      "name": "If we have scraped min 1 url -> Save",
      "type": "n8n-nodes-base.if",
      "position": [
        -1600,
        2300
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {},
      "id": "323774cf-aa1a-4697-b397-453b1747f97b",
      "name": "All scraping node failed. Don't save record without summary",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -1300,
        2300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Scraping\n\nHere jina.ai will get text content from 3 Google Trends URLs",
        "height": 300,
        "width": 1280,
        "color": 7
      },
      "id": "39828fa7-a62e-4d94-a4ab-4b47071aa450",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2200,
        2480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Saving output\n\n",
        "height": 460,
        "width": 500,
        "color": 4
      },
      "id": "f5b5e44a-73e1-4613-96f1-d07d429ad945",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1420,
        2000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Cron trigger\nGoogle Trends update the RSS feed every 10 minutes. This will start wordflow 1 minute after. ",
        "height": 1300,
        "color": 5
      },
      "id": "297840de-c7a9-49c7-9ecf-0a0239c97488",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2460,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## CONFIGURATION\nmin_traffic is a numeric value. Google Trend RSS has an approx traffic value 100, 200, 500, 1000 etc.\n\nmax_result is a numeric value used to limit max rss to scrape\n\njina_key is the jina.ai API key",
        "height": 480,
        "color": 3
      },
      "id": "e47afb3a-9c90-447f-9f2d-63b34d7526b2",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2200,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Google Sheet Database\nThis is main sheet where all your Editorial plan will be saved.\n\nThe column status value could be a trigger for other automations",
        "height": 480
      },
      "id": "ea317ecc-6122-4e1f-877c-60237d20c19c",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1940,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Google Trends request\n\nWe get last kwyword in trend. Every item has a main keyword and 3 URL. We will use those url to scrape content and generate a combined summary",
        "height": 480
      },
      "id": "96afb136-f7f4-42d9-a8a3-2d75dfaa9017",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1680,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Simple conversion\n\nConverts XML RSS into a more readable json object",
        "height": 480
      },
      "id": "705aead6-b3d5-4a8b-866b-de24963381e2",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1420,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Building dataset\n\nHere we limits results, filter by mmin traffic and we flat the RSS structure to adapt to Google Sheet, fields are renamed as per description.\n\nThen RSS result and Google Sheet is compared, if a new keyword is found we have result. If RSS give a keyword already srtored, this node doesn't give any output.",
        "height": 480
      },
      "id": "b48013fd-7f6b-4895-bcad-076171a9d5c9",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1160,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Data mapping\n\nHere you have all fields needed in Google Sheet.\n\nWhile done, the content of 3 website linked in Google Trends RSS will be merged in a single Summary field",
        "height": 460
      },
      "id": "c5456d56-0b8a-4837-8614-9d6b9c74cbc5",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1940,
        2000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Data check\n\nSometimes scraping HTML content fails (for some reasons), that's normal but this should avoid to save a zero content if all 3 scraping nodes will fail",
        "height": 460,
        "color": 3
      },
      "id": "488aa9f6-d6af-413f-9e59-e7fab21805de",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1680,
        2000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Data mapping\n\nHere you have all fields needed in Google Sheet.\n\nWhile done, the content of 3 website linked in Google Trends RSS will be merged in a single Summary field",
        "height": 460
      },
      "id": "ead7b9e7-eeba-4b17-9ede-aa3d84921d20",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2200,
        2000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1420,
        480
      ],
      "id": "5d1bf68e-b6e5-4fdf-9275-18701ffb9e80",
      "name": "Code"
    },
    {
      "parameters": {
        "model": "llama-3.3-70b-versatile",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -1040,
        680
      ],
      "id": "68ba13bd-b6fd-44e5-90e8-c9d5e0e3f603",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "wiJyJHFYEjrlnfDv",
          "name": "Groq account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "n8n-automations",
  "repo_owner": "wanghley",
  "repo_path": "",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-05-22T02:22:03.374Z",
  "versionId": "f78be50b-7150-4765-a5ea-93459cb4dccc"
}