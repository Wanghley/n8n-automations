{
  "active": false,
  "connections": {
    "OpenAI": {
      "ai_languageModel": [
        [
          {
            "node": "Write email",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Approve?": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Markdown": {
      "main": [
        [
          {
            "node": "Email Summarization Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email": {
      "main": [
        [
          {
            "node": "Write email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Draft": {
      "main": [
        [
          {
            "node": "Approve?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek R1": {
      "ai_languageModel": [
        [
          {
            "node": "Email Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Write email": {
      "main": [
        [
          {
            "node": "Send Draft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "ai_tool": [
        [
          {
            "node": "Write email",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Email Trigger (IMAP)": {
      "main": [
        [
          {
            "node": "Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Summarization Chain": {
      "main": [
        [
          {
            "node": "Set Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-01T19:55:29.478Z",
  "id": "WyIZTcRf7kEqIy5C",
  "isArchived": true,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "083352b3-0629-4ff7-bce9-871586e8871a",
      "name": "Email Trigger (IMAP)",
      "type": "n8n-nodes-base.emailReadImap",
      "position": [
        340,
        540
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "html": "={{ $json.textHtml }}",
        "options": {}
      },
      "id": "6de4488d-82f6-404c-aea4-92570e963339",
      "name": "Markdown",
      "type": "n8n-nodes-base.markdown",
      "position": [
        560,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "deepseek/deepseek-r1:free",
          "cachedResultName": "deepseek/deepseek-r1:free"
        },
        "options": {}
      },
      "id": "c7db5cfc-094e-4bfc-8b10-3c82daf3d4b3",
      "name": "DeepSeek R1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        760,
        720
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "fromEmail": "={{ $('Email Trigger (IMAP)').item.json.to }}",
        "toEmail": "={{ $('Email Trigger (IMAP)').item.json.from }}",
        "subject": "=Re: {{ $('Email Trigger (IMAP)').item.json.subject }}",
        "html": "={{ $('Write email').item.json.output }}",
        "options": {}
      },
      "id": "d0dc78e7-162f-47ad-bde8-33e008bdb470",
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "position": [
        2360,
        520
      ],
      "webhookId": "f84fcde7-6aac-485a-9a08-96a35955af49",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "company_knowladge_base",
        "toolDescription": "Extracts information regarding the request made.",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "=COLLECTION"
        },
        "includeDocumentMetadata": false,
        "options": {}
      },
      "id": "8c52f0cd-0754-4b11-8d6d-c7dcd92594c6",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        1700,
        840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3afd6e44-9b3d-452b-9052-4e4bb854e62e",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        1700,
        1020
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "operationMode": "nodeInputBinary",
        "options": {
          "binaryDataKey": "={{ $json.data }}",
          "summarizationMethodAndPrompts": {
            "values": {
              "combineMapPrompt": "=Write a concise summary of the following in max 100 words:\n\n\"{{ $json.data }}\"\n\nDo not enter the total number of words used.",
              "prompt": "=Write a concise summary of the following in max 100 words :\n\n\"{{ $json.data }}\"\n\nDo not enter the total number of words used."
            }
          }
        }
      },
      "id": "f7e6c9f0-7058-4181-969f-5022ba95650c",
      "name": "Email Summarization Chain",
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "position": [
        780,
        540
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Write the text to reply to the following email:\n\n{{ $('Email Summarization Chain').item.json.response.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are an expert at answering emails. You need to answer them professionally based on the information you have. This is a business email. Be concise and never exceed 100 words. Only the body of the email, not create the subject.\n\nIt must be in HTML format and you can insert (if you think it is appropriate) only HTML characters such as <br>, <b>, <i>, <p> where necessary."
        }
      },
      "id": "186b132f-f4ad-4d67-9a9a-ceb0b6ab618e",
      "name": "Write email",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1500,
        540
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "id": "8f0d07ce-8b4c-461b-b622-3f1c6c23b993",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1500,
        840
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "759dc0f9-f582-492c-896c-6426f8410127",
              "name": "email",
              "type": "string",
              "value": "={{ $json.response.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5dec9dff-4cf1-4606-ba04-d231af9e3bc2",
      "name": "Set Email",
      "type": "n8n-nodes-base.set",
      "position": [
        1280,
        540
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "5c377c1c-43c6-45e7-904e-dbbe6b682686",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.data.approved }}",
              "rightValue": "true"
            }
          ]
        },
        "options": {
          "ignoreCase": false
        }
      },
      "id": "e11d7c3f-1e0d-4495-a173-a1a44fc1a94a",
      "name": "Approve?",
      "type": "n8n-nodes-base.if",
      "position": [
        2080,
        540
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "# Main Flow\n\n## Preliminary step:\nCreate a vector database on Qdrant and tokenize the documents useful for generating a response\n\n\n## How it works\nThis workflow is designed to automate the process of handling incoming emails, summarizing their content, generating appropriate responses with RAG, and obtaining approval (YES/NO button) before sending replies.\n\nThis workflow is designed to handle general inquiries that come in via corporate email via IMAP and generate responses using RAG. You can quickly integrate Gmail and Outlook via the appropriate trigger nodes",
        "height": 420,
        "width": 580,
        "color": 3
      },
      "id": "4913e889-042f-41c0-a34d-af7169bbfc2c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        300,
        -40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Convert email to Markdown format for better understanding of LLM models",
        "height": 240
      },
      "id": "fbde4aa3-4ffc-4705-9ede-4a92d8dac2d9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Chain that summarizes the received email",
        "height": 240,
        "width": 320
      },
      "id": "f42bfe56-2161-4dca-be52-410ffc93e1a2",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        760,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Agent that retrieves business information from a vector database and processes the response",
        "height": 240,
        "width": 340
      },
      "id": "cacb3156-9ff8-4cad-8fbf-67d01b3574f4",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1460,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "YOUR GMAIL ADDRESS",
        "subject": "=[Approval Required] {{ $('Email Trigger (IMAP)').item.json.subject }}",
        "message": "=<h3>MESSAGE</h3>\n{{ $('Email Trigger (IMAP)').item.json.textHtml }}\n\n<h3>AI RESPONSE</h3>\n{{ $json.output }}",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {}
      },
      "id": "e4026a0a-bc9a-4372-8c80-b5b954035499",
      "name": "Send Draft",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1860,
        540
      ],
      "webhookId": "d6dd2e7c-90ea-4b65-9c64-523d2541a054",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "content": "## IMPORTANT\n\nFor the \"Send Draft\" node, you need to send the draft email to a Gmail address because it is the only one that allows the \"Send and wait for response\" function.",
        "height": 360,
        "color": 4
      },
      "id": "78098bf6-4778-4cc8-bc2d-9769be99e1a5",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1820,
        340
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "repo_name": "n8n-automations",
  "repo_owner": "wanghley",
  "repo_path": "",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-06-01T20:20:06.363Z",
  "versionId": "defc951b-10aa-4f2f-aa93-842eda58153e"
}